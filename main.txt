main.tf file

provider "aws" {
  region = "us-east-1"
  access_key = ""
  secret_key = ""
}

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.1.0.0/16"
}

resource "aws_subnet" "public_subnet" {
  vpc_id = aws_vpc.my_vpc.id
  cidr_block = "10.1.1.0/24"
  map_public_ip_on_launch = true
  availability_zone = "us-east-1a"  
}

resource "aws_subnet" "private_subnet" {
  vpc_id = aws_vpc.my_vpc.id
  cidr_block = "10.1.2.0/24"
  availability_zone = "us-east-1b"
}

resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
}

resource "aws_route_table" "public_route_table" {
  vpc_id = aws_vpc.my_vpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }
}

resource "aws_route_table_association" "public_subnet_association" {
  subnet_id = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.public_route_table.id
}

resource "aws_nat_gateway" "nat_gateway" {
  allocation_id = aws_eip.nat_eip.id
  subnet_id = aws_subnet.public_subnet.id
}

resource "aws_eip" "nat_eip" {
  domain = "vpc"
}

resource "aws_route_table" "private_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.nat_gateway.id
  }
}

resource "aws_route_table_association" "private_subnet_association" {
  subnet_id = aws_subnet.private_subnet.id
  route_table_id = aws_route_table.private_route_table.id
}

resource "aws_security_group" "my_sg" {
  vpc_id = aws_vpc.my_vpc.id
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "private_instances" {
  count = 2
  ami = "ami-06aa3f7caf3a30282"  
  instance_type = "t2.micro"
  key_name ="Assignment key pair"
  subnet_id = aws_subnet.private_subnet.id
  vpc_security_group_ids = [aws_security_group.my_sg.id]
}

----------------------------------------------------------------------------------------------------------------------------------------------

provider "aws" {
 Assignment-5
access_key = ""
 secret_key = ""
 region = "us-east-2"
 }
 resource "aws_instance" "a5-instance" {
 ami =""
 instance_type = "t2.micro"
 key_name =""
 user_data = "${ le("install-apache2.sh")}"
 tags = {
 Name="a5-instance"
 }
 }
 output "IPv4" {
 value = aws_instance.a5-instance.public_ip
 }
 sudo nanoinstall-apache2.sh
#!/bin/bash
 sudo apt update-y
 sudo apt install apache2-y
 sudo su
 echo "Custom html page" > /var/www/html/index.html
--------------------------------------------------------------------------------------------------------------------------------------
 main.tf

 provider "aws" {
 access_key = ""
 secret_key = ""
 region = "us-east-1"
 }
 resource "aws_instance" "k8master" {
 ami ="ami-0cd59ecaf368e5ccf"
 instance_type ="t2.medium"
 key_name ="Assignment key pair"
 tags = {
 Name="k8-m"
 }
 }
 resource "aws_instance" "k8slave" {
 ami ="ami-0cd59ecaf368e5ccf"
 instance_type ="t2.micro"
 key_name ="Assignment key pair"
 tags = {
 Name="k8-s"
 }
 }
